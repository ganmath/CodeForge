
name: CI - Build, Tests, Sonar

on:
  push:
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: |
            frontend/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Build Backend (skip tests for speed)
        working-directory: backend
        run: ./mvnw -q -DskipTests package

      - name: Start Backend (background)
        working-directory: backend
        run: |
          nohup ./mvnw -q -Dspring-boot.run.profiles=ci -Dcodeforge.mongo.enabled=false spring-boot:run > ../backend.log 2>&1 &
          sleep 12

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build

      - name: Start Frontend (background)
        working-directory: frontend
        env:
          NEXT_PUBLIC_API_BASE_URL: http://localhost:8080
        run: |
          nohup npm run start -- -p 3000 > ../frontend.log 2>&1 &
          sleep 10

      - name: L0/L1 Tests
        working-directory: backend
        run: ./mvnw -q -Dcodeforge.mongo.enabled=false -Dtest="com.codeforge.L0_ContextLoadsTest,bdd.l1.RunL1CucumberTest" test

      - name: L2 UI BDD (Selenide headless)
        working-directory: backend
        env:
          SelenideHeadless: "true"
        run: ./mvnw -q -Dselenide.headless=true -Dtest="bdd.l2.RunL2CucumberTest" test

      - name: Sonar Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          ./backend/mvnw -q -DskipTests -f backend/pom.xml sonar:sonar                 -Dsonar.projectKey=codeforge-skeleton-v4                 -Dsonar.projectName="CodeForge Skeleton v4"                 -Dsonar.organization=your-org
